2.
Die Superskalare Pipeline brauchte 14 Takte, um die Folge abzuarbeiten, wenn man zählt, bis die 9 die Write Back Phase verlassen hat. Ansonsten sind es 13 Takte.
Die skalare Pipeline braucht 35 Takte.
Dabei gehen wir davon aus, dass extra Takte eingefüllt werden müssen, damit das Operand Fetch des nächsten Befehls die Ergebnisse der Write Back Phase des vorherigen Befehls lesen kann, falls eine Abhängigkeit besteht.
Das betrifft folgende Abhängigkeiten: 3 von 2, 6 von 5 und 9 von 8

26 (EX addiert) + 3 (IF ID OF für 1.) + 6 (3 wartet auf 2, 6. auf 5. und 9. auf 8) = 35 Takte

3.
Eine mögliche Optimierung wäre der Einsatz von Forwarding um die Probleme mit den oben gezeigten Abhängigkeiten zu minimieren.
Durch andere Anorderung der Befehle könnte man die Pipeline besser nutzen und die Abarbeitungszeit verkürzen.
 - Beispiel: Befehl 9 (Multiplikation) braucht am Längsten und zögert den Abschluss des Codes hinaus. Die Befehle 8 und 9 sind unabhängig von den anderen.
